<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>领江的小博客</title>
  <subtitle>记录在学校挣扎的苦逼生活...</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-07-14T05:19:15.412Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Dany Xie</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>markdown测试</title>
    <link href="http://yoursite.com/2017/05/13/markdown%20%E6%B5%8B%E8%AF%95/"/>
    <id>http://yoursite.com/2017/05/13/markdown 测试/</id>
    <published>2017-05-13T07:17:10.000Z</published>
    <updated>2017-07-14T05:19:15.412Z</updated>
    
    <content type="html"><![CDATA[<h2 id="markdown-测试"><a href="#markdown-测试" class="headerlink" title="markdown 测试"></a>markdown 测试</h2><h3 id="设置代码块"><a href="#设置代码块" class="headerlink" title="设置代码块"></a>设置代码块</h3><figure class="highlight plain"><figcaption><span>```</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div></pre></td></tr></table></figure>
<p>package binaryheap;</p>
<p>public class BinaryHeap {<br>    private static final int DEFAULT_CAPACITY=10;<br>    public int currentSize;<br>    public int [] array;</p>
<pre><code>private void percolateDown(int hole){
    int child=0;
    //tmp值是那个传入的最初要下沉的值
    int tmp=array[hole];
    //这个for循环，结束之后,hole要不就是最后一个，要不就满足了堆，（子树）根节点最小的特性
    for(;hole*2&lt;=currentSize;hole=child){

        child=hole*2;
        if(child!=currentSize &amp;&amp; (array[child+1]&lt;array[child]) ) child++;
        //如上的语句结束可以得到两个子节点中较小的那个
        if(array[child]&lt;tmp){
            array[hole]=array[child];
        }else break;
        //如上判断结束hole到了最终的位置
    }
    array[hole]=tmp;
}

private void buildHeap(){
    //这里从currentSize/2这个位置（最后一个非叶节点）开始，直到根节点，不断下滤调整堆序。
    for(int i= currentSize/2;i&gt;0;i--){
        percolateDown(i);
    }
}

public void enlarge(int newSize){
    int [] tmp=new int[newSize];
    for(int i=1;i&lt;=currentSize;i++){
        tmp[i]=array[i];
    }
    array=tmp;

}

public BinaryHeap(int [] data){
    //先依据传入的数组，建造无序堆，在调整成有序堆。
    currentSize=data.length;
    array=new int[(currentSize+2)*11/10];
    int i=1;
    for(int item : data) array[i++]=item;
    buildHeap();
}

public void makeEmpty(){
    currentSize=0;
}
public boolean isEmpty(){
    return currentSize==0;
}
public int min(){
    if(isEmpty()) {
        System.out.println(&quot;堆为空！返回-1&quot;);
        return -1;
    }
    else{
        return array[1];
        }
}
public int deleteMin(){
    if(isEmpty()) {
        System.out.println(&quot;堆为空！返回-1&quot;);
        return -1;
    }
    int lastmin =min();
    array[1]=array[currentSize--];
    percolateDown(1);
    return lastmin;
}
public void insert(int data){
    //自动扩容
    if(currentSize==array.length-1){
        enlarge(array.length*2+1);
    }
    //上冒操作
     int hole=++currentSize;
     for(;hole&gt;1 &amp;&amp; data &lt; array[hole/2];hole/=2) array[hole]=array[hole/2];
     array[hole]=data;
}
</code></pre><p>}</p>
<p>```</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;markdown-测试&quot;&gt;&lt;a href=&quot;#markdown-测试&quot; class=&quot;headerlink&quot; title=&quot;markdown 测试&quot;&gt;&lt;/a&gt;markdown 测试&lt;/h2&gt;&lt;h3 id=&quot;设置代码块&quot;&gt;&lt;a href=&quot;#设置代码块&quot; class
    
    </summary>
    
      <category term="笔记" scheme="http://yoursite.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="YAYA" scheme="http://yoursite.com/tags/YAYA/"/>
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>测试</title>
    <link href="http://yoursite.com/2017/02/13/%E6%B5%8B%E8%AF%95/"/>
    <id>http://yoursite.com/2017/02/13/测试/</id>
    <published>2017-02-13T07:17:10.000Z</published>
    <updated>2017-07-14T04:48:33.128Z</updated>
    
    <content type="html"><![CDATA[<p>因为我们的博文都是用Markdown语言写的，所以首先，你需要一个好用的Markdown编辑器。其实好用的Markdown编辑器一大堆，这里就给大家推荐两个，如果你用的不习惯也可以换其它的。</p>
<pre><code>本地编辑器：Haroopad，非常小众的一款Markdown编辑器，左边编辑右边实时预览效果，非常轻便；

在线编辑器：MaHua，也是比较小众的一款Markdown编辑器，但效果确实很棒，我的这篇博文就是用MaHua写的。
</code></pre><p><img src="http://ot11hkokg.bkt.clouddn.com/17-7-13/8384467.jpg" alt="hello"></p>
<p>‘’‘<br>from django import template import mistune from pygments import highlight from pygments.lexers import get_lexer_by_name from pygments.formatters import HtmlFormatter register = template.Library() def block_code(text, lang, inlinestyles=False, linenos=False): if not lang: text = text.strip() return u’<pre><code>%s</code></pre>\n’ % mistune.escape(text) try: lexer = get_lexer_by_name(lang, stripall=True) formatter = HtmlFormatter( noclasses=inlinestyles, linenos=linenos ) code = highlight(text, lexer, formatter) if linenos: return ‘<div class="highlight">%s</div>\n’ % code return code except: return ‘<pre class="%s"><code>%s</code></pre>\n’ % ( lang, mistune.escape(text) ) class HighlightMixin(object): def block_code(self, text, lang): # renderer has an options inlinestyles = self.options.get(‘inlinestyles’) linenos = self.options.get(‘linenos’) return block_code(text, lang, inlinestyles, linenos) class TocRenderer(HighlightMixin, mistune.Renderer): pass @register.filter def markdown_detail(value): renderer = TocRenderer(linenos=True, inlinestyles=False) mdp = mistune.Markdown(escape=True, renderer=renderer) return mdp(value)</p>
<p>作者：大阿拉伯人<br>链接：<a href="http://www.jianshu.com/p/2909aed83dad" target="_blank" rel="external">http://www.jianshu.com/p/2909aed83dad</a><br>來源：简书<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。<br>’‘’</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;因为我们的博文都是用Markdown语言写的，所以首先，你需要一个好用的Markdown编辑器。其实好用的Markdown编辑器一大堆，这里就给大家推荐两个，如果你用的不习惯也可以换其它的。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;本地编辑器：Haroopad，非常小众的一款Mark
    
    </summary>
    
      <category term="笔记" scheme="http://yoursite.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="YAYA" scheme="http://yoursite.com/tags/YAYA/"/>
    
  </entry>
  
  <entry>
    <title>建站笔记</title>
    <link href="http://yoursite.com/2016/07/12/%E5%BB%BA%E7%AB%99%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2016/07/12/建站笔记/</id>
    <published>2016-07-12T10:58:51.000Z</published>
    <updated>2017-07-14T03:36:47.097Z</updated>
    
    <content type="html"><![CDATA[<p>安装node.js<br>准备命令： yum -y install gcc make gcc-c++ openssl-devel wget<br>去node.js中文网下载linux 64位的安装文件 xxx.tar.xz<br>解压缩文件 xz -d node-v8.1.3-linux-x64.tar.xz 再解压缩 tar -xvf node-v8.1.3-linux-x64.tar<br>把文件直接移到 指定文件夹中 sudo mv node-v8.1.3-linux-x64 /usr/local<br>配置环境变量 sudo vim /etc/profile 添加如下：export PATH=$PATH:/usr/local/nodejs/bin 生效 source /etc/profile<br>查看是否配置成功：echo $PATH<br>检查node.js是否配置成功 node -v npm -v<br><a id="more"></a><br>安装git:<br>直接安装：sudo yum install git<br>查看是否安装成功：git –version<br>查看安装位置：which git<br>配置git :git config –global user.name “LingJiangXie”<br>         git config –global user.email “xielj1994@outlook.com”<br>查看配置列表：git config –list</p>
<p>在自己的git上新建一个 LingJiangXie.github.io（不能为空，否则没有节点）<br>ssh 密药配置 参考<a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/001374385852170d9c7adf13c30429b9660d0eb689dd43a000" target="_blank" rel="external">http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/001374385852170d9c7adf13c30429b9660d0eb689dd43a000</a></p>
<p>其他基本参考：<a href="http://www.cnblogs.com/wanghuaijun/p/7073296.html" target="_blank" rel="external">http://www.cnblogs.com/wanghuaijun/p/7073296.html</a></p>
<p>部署服务时 出现问题参考：npm install hexo-deployer-git –save （此命令在新建的本地博客文件夹根目录执行）改了之后执行，然后再部署试试</p>
<p>修改，更换完主题 重新执行<br>//生成静态文件<br>hexo generate</p>
<p>//部署服务<br>hexo deploy</p>
<p>还可以参考这个：</p>
<p><a href="https://zhuanlan.zhihu.com/p/26625249" target="_blank" rel="external">https://zhuanlan.zhihu.com/p/26625249</a> 比较全</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;安装node.js&lt;br&gt;准备命令： yum -y install gcc make gcc-c++ openssl-devel wget&lt;br&gt;去node.js中文网下载linux 64位的安装文件 xxx.tar.xz&lt;br&gt;解压缩文件 xz -d node-v8.1.3-linux-x64.tar.xz 再解压缩 tar -xvf node-v8.1.3-linux-x64.tar&lt;br&gt;把文件直接移到 指定文件夹中 sudo mv node-v8.1.3-linux-x64 /usr/local&lt;br&gt;配置环境变量 sudo vim /etc/profile 添加如下：export PATH=$PATH:/usr/local/nodejs/bin 生效 source /etc/profile&lt;br&gt;查看是否配置成功：echo $PATH&lt;br&gt;检查node.js是否配置成功 node -v npm -v&lt;br&gt;
    
    </summary>
    
      <category term="笔记" scheme="http://yoursite.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="YAYA" scheme="http://yoursite.com/tags/YAYA/"/>
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
  </entry>
  
</feed>
