<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>领江的小博客</title>
  <subtitle>记录在学校挣扎的苦逼生活...</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://sowhatxie.top/"/>
  <updated>2017-07-15T09:01:56.003Z</updated>
  <id>http://sowhatxie.top/</id>
  
  <author>
    <name>Dany Xie</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>复盘一阶段</title>
    <link href="http://sowhatxie.top/2017/08/14/%E5%A4%8D%E7%9B%98%E4%B8%80%E9%98%B6%E6%AE%B5/"/>
    <id>http://sowhatxie.top/2017/08/14/复盘一阶段/</id>
    <published>2017-08-14T07:17:10.000Z</published>
    <updated>2017-07-15T09:01:56.003Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习方法"><a href="#学习方法" class="headerlink" title="学习方法"></a>学习方法</h2><p>领域内，国际顶级会议：<br>internation conference on data mining  </p>
<p>internation conference on data engineering  </p>
<p>internation conference on machine learning  </p>
<p>internation joint conference on artificial intelligence  </p>
<p>pacific-asia conference on knowledge discoverry and data mining  </p>
<p>acm sigkdd conference on knowledge iscoverry and data mining  </p>
<p>还有一些IEEE的领域内顶级期刊</p>
<p>跟踪领域内，专家</p>
<p>必须用Google 搜文献</p>
<p>利用 machine learning repository UCI 来收集数据集<br><a id="more"></a><br>还有 kd nuggets 这个网站</p>
<p>基于此，掌握领域前沿开阔视野  </p>
<p>数据挖掘，是一个综合的领域，多学科交叉 </p>
<p>/Users/DANNY/Documents/博客内图片/7.15涉及的小方面.png</p>
<p>学习方法：</p>
<p>课堂或看视频 思考与讨论  </p>
<p>阅读相关材料 扩展与启发   </p>
<p>联系 技术技巧与应用</p>
<p>开放数据<br>如何寻找，下载数据？  </p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>监督学习  </p>
<p>专业名词： 分类边界 classification boundaries  过拟合 overfitting 交叉验证 cross validation （训练集 测试集）<br> confusion matrix 混淆矩阵 ：<br> 假设一个二分类问题 样本本身具有 positive negative ，此外训练得到模型也会给样本进行预测，给出预测值 positive negative 因此基于此，衍生出四种情况  ：  </p>
<ol>
<li>true positive TP （本来的标签就是 positive ，模型给出的预测值也是 positive）  </li>
<li>false negative FN (本来的标签是 positive ，模型给出的预测值是 negative)  </li>
<li>false positive FP (本来的标签是 negative ，模型给出的预测值是 positive)   </li>
<li>true negative TN （本来的标签就是 negative ，模型给出的预测值也是 negative）</li>
</ol>
<p>基于这四种情况，给出这些统计量：<br>略  </p>
<p>receiver operating characteristic (ROC 曲线) ，一般横坐标 FP 纵坐标 TP，FP + TP =1 。 AUC 曲线下方的面积   </p>
<p>cost sensitive learning 不同领域侧重点不同（权重不同），错误代价不同。<br>lift analysis 利用模型相较于不用模型，提升度有多少。  </p>
<h2 id="聚类及其他挖掘问题"><a href="#聚类及其他挖掘问题" class="headerlink" title="聚类及其他挖掘问题"></a>聚类及其他挖掘问题</h2><p>非监督学习   </p>
<p>层次聚类，非层次聚类：  </p>
<p>距离度量（相似度）：  </p>
<p>关联规则（association rule）：  </p>
<p>回归：过拟合等</p>
<p>算法： </p>
<p>应用：   </p>
<p>可视化（seeing is knowing ）： 可解释性  performance dashboard   </p>
<p>数据预处理（data preprocessing ）：数据质量 是很基础却又很关键的一步   </p>
<p>数据挖掘是挖掘规律，而不产生规律  </p>
<p>注意内在规律 </p>
<p>相关性不等于因果   </p>
<p>幸存者偏执（survivorship bias ） 不清楚这点，可能会本末倒置 盲人摸象 看问题要全面</p>
<h2 id="隐私保护与并行计算"><a href="#隐私保护与并行计算" class="headerlink" title="隐私保护与并行计算"></a>隐私保护与并行计算</h2><h2 id="数据预处理-（data-preprocessing）"><a href="#数据预处理-（data-preprocessing）" class="headerlink" title="数据预处理 （data preprocessing）"></a>数据预处理 （data preprocessing）</h2><p>总纲：   </p>
<ol>
<li>data cleaning</li>
<li>data transformation</li>
<li>data description</li>
<li>feature selection</li>
<li>feature extraction  </li>
</ol>
<p>数据来源   </p>
<h3 id="来源，格式均不同"><a href="#来源，格式均不同" class="headerlink" title="来源，格式均不同"></a>来源，格式均不同</h3><p>数据预处理，可能是整个数据挖掘过程中最具有挑战性的工作。  </p>
<p>脏数据：不完全，缺失（采集设备故障等原因；采集时，受试者未提供；数据不适合 N/A）；  种类：完全随机缺失，条件随机缺失，等等。<br>有噪声；<br>冗余。。。。 </p>
<p>处理手段：<br>忽视；填缺失值（自动；凭借领域知识，经验）；  </p>
<h3 id="离群与重复值检测处理："><a href="#离群与重复值检测处理：" class="headerlink" title="离群与重复值检测处理："></a>离群与重复值检测处理：</h3><p>离群点（Outliers）<br>离群是一个相对的概念，如何度量？<br>异常点（anomaly）  </p>
<p>duplicate data （重复检测）：从冗余信息中，区分出是否有些东西指的是同一个东西  </p>
<p>技术：滑动窗口；哈希散列（相近的的给出相近的哈希值）；  </p>
<h3 id="类型转换与采样："><a href="#类型转换与采样：" class="headerlink" title="类型转换与采样："></a>类型转换与采样：</h3><p> 对不同类型，采用合适的编码方式？低维的转到高维来处理。。。。。  </p>
<p> 利用采样，降低处理的复杂度。aggregation ,调整比例。。。。<br> 对于本身就不平衡的数据集，如何处理？不能完全依据准确率来评判分类器的性能（评判癌症）。G-mean，F-measure，over-sampling,boundary-sampling(边缘采样)  </p>
<h3 id="数据描述与可视化"><a href="#数据描述与可视化" class="headerlink" title="数据描述与可视化"></a>数据描述与可视化</h3><p>normalization(标准化)：min-max（明确上下界）；z-score（根据均值）；<br>数据描述的一些统计量：均值，中位数，mode，variance。。。<br>可视化：不同的维度；各种不同的可视化方式（各种XXX图）</p>
<h3 id="特征选择（feature-selection）"><a href="#特征选择（feature-selection）" class="headerlink" title="特征选择（feature selection）"></a>特征选择（feature selection）</h3><p>去除一些不要的属性；好的属性，能够有很好的区分度。<br>如何量化？<br>利用熵（entropy）量化区分度。信息增益。  </p>
<p>branch and bound  ：单调性假设；剪枝；<br>top k individual features；sequential forward selection ;sequential backword selection ;</p>
<h3 id="主成分分析（PCA）"><a href="#主成分分析（PCA）" class="headerlink" title="主成分分析（PCA）"></a>主成分分析（PCA）</h3><p>特征的压缩，而非去除。<br>角度不同，得到的信息不同。坐标轴旋转，转换矩阵。降维，投影；<br>拉格朗日乘数法，把约束的优化，转化为无约束优化。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;学习方法&quot;&gt;&lt;a href=&quot;#学习方法&quot; class=&quot;headerlink&quot; title=&quot;学习方法&quot;&gt;&lt;/a&gt;学习方法&lt;/h2&gt;&lt;p&gt;领域内，国际顶级会议：&lt;br&gt;internation conference on data mining  &lt;/p&gt;
&lt;p&gt;internation conference on data engineering  &lt;/p&gt;
&lt;p&gt;internation conference on machine learning  &lt;/p&gt;
&lt;p&gt;internation joint conference on artificial intelligence  &lt;/p&gt;
&lt;p&gt;pacific-asia conference on knowledge discoverry and data mining  &lt;/p&gt;
&lt;p&gt;acm sigkdd conference on knowledge iscoverry and data mining  &lt;/p&gt;
&lt;p&gt;还有一些IEEE的领域内顶级期刊&lt;/p&gt;
&lt;p&gt;跟踪领域内，专家&lt;/p&gt;
&lt;p&gt;必须用Google 搜文献&lt;/p&gt;
&lt;p&gt;利用 machine learning repository UCI 来收集数据集&lt;br&gt;
    
    </summary>
    
      <category term="笔记" scheme="http://sowhatxie.top/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="ML" scheme="http://sowhatxie.top/tags/ML/"/>
    
  </entry>
  
  <entry>
    <title>markdown测试2</title>
    <link href="http://sowhatxie.top/2017/05/14/%E6%B5%8B%E8%AF%95%20%E6%9C%80%E5%A4%A7%E6%A0%87%E9%A2%98/"/>
    <id>http://sowhatxie.top/2017/05/14/测试 最大标题/</id>
    <published>2017-05-14T07:17:10.000Z</published>
    <updated>2017-07-15T08:58:15.936Z</updated>
    
    <content type="html"><![CDATA[<h1 id="测试-最大标题"><a href="#测试-最大标题" class="headerlink" title="测试 最大标题"></a>测试 最大标题</h1><h2 id="段落标题-1"><a href="#段落标题-1" class="headerlink" title="段落标题 1"></a>段落标题 1</h2><p>下面是一个无序列表（无缩进）  换行两个以上空格再加回车  </p>
<ul>
<li>1 第一行</li>
<li>3 第二行</li>
<li>4 第三行</li>
<li>5 第四行 </li>
</ul>
<p>下面又是一个无序列表（本行无缩进）  </p>
<ul>
<li>1 第一行</li>
<li>2 第二行</li>
<li>3 第三行</li>
</ul>
<h2 id="段落标题-2"><a href="#段落标题-2" class="headerlink" title="段落标题 2"></a>段落标题 2</h2><p>直接两个空格（没有缩进）<br>  &emsp;&emsp;这里直接利用写两个全角空格代码缩进<br>  下面是有序列表 </p>
<ol>
<li>第一行</li>
<li>第二行</li>
<li>第三行  <a id="more"></a>    
&emsp;&emsp;在列表之前和之后，都是要有换行的，不然列表会失效。另外在列表符号后要有空格<br>这里直接使用代码换行，感觉比较好用，很明确。<br><h2 id="这一段，我试验引用"><a href="#这一段，我试验引用" class="headerlink" title="这一段，我试验引用"></a>这一段，我试验引用</h2>&emsp;&emsp;引用是可以嵌套的哦！<br><blockquote>
<p>这是单行引用。<br>在处于引用范围内，回车换行不会真的换行的哦！这里我直接输代码，结束引用<br><br>好像还是不行，确实是换行了，但还没有脱离引用的范围，我猜是要主动删除引用符，我试试</p>
</blockquote>
</li>
</ol>
<p>果然结束了哦，哈哈<br><br><br>这里用了两个换行，果然是换了两行。<br><br>这里我来实验一下嵌套的引用  </p>
<blockquote>
<p>在这里是最外层引用范围</p>
<blockquote>
<p>呀的什么鬼，我在里面。好舒服！</p>
</blockquote>
<p>这里还是最外层的引用，不过马上就要结束了，再见，不散!(注意哦，我跟你说，要实现嵌套，需要在里面加一个换行，脱离内层引用。)<br></p>
</blockquote>
<h2 id="这里我要试验一下，代码块"><a href="#这里我要试验一下，代码块" class="headerlink" title="这里我要试验一下，代码块"></a>这里我要试验一下，代码块</h2><p>代码块内是可以使用一般的缩进的  </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">我在代码块里面</div><div class="line">在代码块里面感觉就是一般的书写没有别的什么特别的</div></pre></td></tr></table></figure>
<p>这里是行内代码块 <code>哈哈就是我</code> 你看到了吗。（注意：需要和普通段落之间存在空行。）行内代码块的作用，我觉得，是可以展示一些有特效的东西，放进引用，就没有格式了。</p>
<h2 id="我要试试，链接和图片了"><a href="#我要试试，链接和图片了" class="headerlink" title="我要试试，链接和图片了"></a>我要试试，链接和图片了</h2><p>链接可以由两种形式生成：行内式和参考式。<br>注意：</p>
<ol>
<li>参考式链接和行内链接的显示效果是一样的。但是在编辑状态下的使用情况不一样。行内连接紧跟链接文字，可以在看到链接文字的同时清楚的知道链接地址，但是不便于多次重复利用。参考式链接我觉得可以放在文尾，用来展示引用。</li>
</ol>
<p>使用 <code>[](link &quot;Optional title&quot;)</code> 表示行内链接。  </p>
<p>这里是一个链接：<a href="http://ot11hkokg.bkt.clouddn.com/17-7-14/84353569.jpg" title="悬浮显示文字" target="_blank" rel="external">链接文字放在框框里面</a><br></p>
<p><a href="www.baidu.com">参考式文字</a></p>
<h2 id="我要试试参考式"><a href="#我要试试参考式" class="headerlink" title="我要试试参考式"></a>我要试试参考式</h2><p>开始文字<br><a href="www.baidu.com">参考式文字</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;测试-最大标题&quot;&gt;&lt;a href=&quot;#测试-最大标题&quot; class=&quot;headerlink&quot; title=&quot;测试 最大标题&quot;&gt;&lt;/a&gt;测试 最大标题&lt;/h1&gt;&lt;h2 id=&quot;段落标题-1&quot;&gt;&lt;a href=&quot;#段落标题-1&quot; class=&quot;headerlink&quot; title=&quot;段落标题 1&quot;&gt;&lt;/a&gt;段落标题 1&lt;/h2&gt;&lt;p&gt;下面是一个无序列表（无缩进）  换行两个以上空格再加回车  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1 第一行&lt;/li&gt;
&lt;li&gt;3 第二行&lt;/li&gt;
&lt;li&gt;4 第三行&lt;/li&gt;
&lt;li&gt;5 第四行 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面又是一个无序列表（本行无缩进）  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1 第一行&lt;/li&gt;
&lt;li&gt;2 第二行&lt;/li&gt;
&lt;li&gt;3 第三行&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;段落标题-2&quot;&gt;&lt;a href=&quot;#段落标题-2&quot; class=&quot;headerlink&quot; title=&quot;段落标题 2&quot;&gt;&lt;/a&gt;段落标题 2&lt;/h2&gt;&lt;p&gt;直接两个空格（没有缩进）&lt;br&gt;  &amp;emsp;&amp;emsp;这里直接利用写两个全角空格代码缩进&lt;br&gt;  下面是有序列表 &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;第一行&lt;/li&gt;
&lt;li&gt;第二行&lt;/li&gt;
&lt;li&gt;第三行
    
    </summary>
    
      <category term="笔记" scheme="http://sowhatxie.top/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="YAYA" scheme="http://sowhatxie.top/tags/YAYA/"/>
    
      <category term="Hexo" scheme="http://sowhatxie.top/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>markdown测试</title>
    <link href="http://sowhatxie.top/2017/05/13/markdown%20%E6%B5%8B%E8%AF%95/"/>
    <id>http://sowhatxie.top/2017/05/13/markdown 测试/</id>
    <published>2017-05-13T07:17:10.000Z</published>
    <updated>2017-07-15T08:57:32.958Z</updated>
    
    <content type="html"><![CDATA[<h2 id="markdown-测试"><a href="#markdown-测试" class="headerlink" title="markdown 测试"></a>markdown 测试</h2><h3 id="设置代码块"><a href="#设置代码块" class="headerlink" title="设置代码块"></a>设置代码块</h3><a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">package binaryheap;</div><div class="line"></div><div class="line">public class BinaryHeap &#123;</div><div class="line">	private static final int DEFAULT_CAPACITY=10;</div><div class="line">	public int currentSize;</div><div class="line">	public int [] array;</div><div class="line">	</div><div class="line">	private void percolateDown(int hole)&#123;</div><div class="line">		int child=0;</div><div class="line">		//tmp值是那个传入的最初要下沉的值</div><div class="line">		int tmp=array[hole];</div><div class="line">		//这个for循环，结束之后,hole要不就是最后一个，要不就满足了堆，（子树）根节点最小的特性</div><div class="line">		for(;hole*2&lt;=currentSize;hole=child)&#123;</div><div class="line">			</div><div class="line">			child=hole*2;</div><div class="line">			if(child!=currentSize &amp;&amp; (array[child+1]&lt;array[child]) ) child++;</div><div class="line">			//如上的语句结束可以得到两个子节点中较小的那个</div><div class="line">			if(array[child]&lt;tmp)&#123;</div><div class="line">				array[hole]=array[child];</div><div class="line">			&#125;else break;</div><div class="line">			//如上判断结束hole到了最终的位置</div><div class="line">		&#125;</div><div class="line">		array[hole]=tmp;</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	private void buildHeap()&#123;</div><div class="line">		//这里从currentSize/2这个位置（最后一个非叶节点）开始，直到根节点，不断下滤调整堆序。</div><div class="line">		for(int i= currentSize/2;i&gt;0;i--)&#123;</div><div class="line">			percolateDown(i);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	public void enlarge(int newSize)&#123;</div><div class="line">		int [] tmp=new int[newSize];</div><div class="line">		for(int i=1;i&lt;=currentSize;i++)&#123;</div><div class="line">			tmp[i]=array[i];</div><div class="line">		&#125;</div><div class="line">		array=tmp;</div><div class="line">		</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	public BinaryHeap(int [] data)&#123;</div><div class="line">		//先依据传入的数组，建造无序堆，在调整成有序堆。</div><div class="line">		currentSize=data.length;</div><div class="line">		array=new int[(currentSize+2)*11/10];</div><div class="line">		int i=1;</div><div class="line">		for(int item : data) array[i++]=item;</div><div class="line">		buildHeap();</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	public void makeEmpty()&#123;</div><div class="line">		currentSize=0;</div><div class="line">	&#125;</div><div class="line">	public boolean isEmpty()&#123;</div><div class="line">		return currentSize==0;</div><div class="line">	&#125;</div><div class="line">	public int min()&#123;</div><div class="line">		if(isEmpty()) &#123;</div><div class="line">			System.out.println(&quot;堆为空！返回-1&quot;);</div><div class="line">			return -1;</div><div class="line">		&#125;</div><div class="line">		else&#123;</div><div class="line">			return array[1];</div><div class="line">			&#125;</div><div class="line">	&#125;</div><div class="line">	public int deleteMin()&#123;</div><div class="line">		if(isEmpty()) &#123;</div><div class="line">			System.out.println(&quot;堆为空！返回-1&quot;);</div><div class="line">			return -1;</div><div class="line">		&#125;</div><div class="line">		int lastmin =min();</div><div class="line">		array[1]=array[currentSize--];</div><div class="line">		percolateDown(1);</div><div class="line">		return lastmin;</div><div class="line">	&#125;</div><div class="line">	public void insert(int data)&#123;</div><div class="line">		//自动扩容</div><div class="line">		if(currentSize==array.length-1)&#123;</div><div class="line">			enlarge(array.length*2+1);</div><div class="line">		&#125;</div><div class="line">		//上冒操作</div><div class="line">		 int hole=++currentSize;</div><div class="line">		 for(;hole&gt;1 &amp;&amp; data &lt; array[hole/2];hole/=2) array[hole]=array[hole/2];</div><div class="line">		 array[hole]=data;</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="下一个"><a href="#下一个" class="headerlink" title="下一个"></a>下一个</h3><p>其实啥都目有！</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;markdown-测试&quot;&gt;&lt;a href=&quot;#markdown-测试&quot; class=&quot;headerlink&quot; title=&quot;markdown 测试&quot;&gt;&lt;/a&gt;markdown 测试&lt;/h2&gt;&lt;h3 id=&quot;设置代码块&quot;&gt;&lt;a href=&quot;#设置代码块&quot; class=&quot;headerlink&quot; title=&quot;设置代码块&quot;&gt;&lt;/a&gt;设置代码块&lt;/h3&gt;
    
    </summary>
    
      <category term="笔记" scheme="http://sowhatxie.top/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="YAYA" scheme="http://sowhatxie.top/tags/YAYA/"/>
    
      <category term="Hexo" scheme="http://sowhatxie.top/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>建站笔记</title>
    <link href="http://sowhatxie.top/2016/07/12/%E5%BB%BA%E7%AB%99%E7%AC%94%E8%AE%B0/"/>
    <id>http://sowhatxie.top/2016/07/12/建站笔记/</id>
    <published>2016-07-12T10:58:51.000Z</published>
    <updated>2017-07-14T03:36:47.097Z</updated>
    
    <content type="html"><![CDATA[<p>安装node.js<br>准备命令： yum -y install gcc make gcc-c++ openssl-devel wget<br>去node.js中文网下载linux 64位的安装文件 xxx.tar.xz<br>解压缩文件 xz -d node-v8.1.3-linux-x64.tar.xz 再解压缩 tar -xvf node-v8.1.3-linux-x64.tar<br>把文件直接移到 指定文件夹中 sudo mv node-v8.1.3-linux-x64 /usr/local<br>配置环境变量 sudo vim /etc/profile 添加如下：export PATH=$PATH:/usr/local/nodejs/bin 生效 source /etc/profile<br>查看是否配置成功：echo $PATH<br>检查node.js是否配置成功 node -v npm -v<br><a id="more"></a><br>安装git:<br>直接安装：sudo yum install git<br>查看是否安装成功：git –version<br>查看安装位置：which git<br>配置git :git config –global user.name “LingJiangXie”<br>         git config –global user.email “xielj1994@outlook.com”<br>查看配置列表：git config –list</p>
<p>在自己的git上新建一个 LingJiangXie.github.io（不能为空，否则没有节点）<br>ssh 密药配置 参考<a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/001374385852170d9c7adf13c30429b9660d0eb689dd43a000" target="_blank" rel="external">http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/001374385852170d9c7adf13c30429b9660d0eb689dd43a000</a></p>
<p>其他基本参考：<a href="http://www.cnblogs.com/wanghuaijun/p/7073296.html" target="_blank" rel="external">http://www.cnblogs.com/wanghuaijun/p/7073296.html</a></p>
<p>部署服务时 出现问题参考：npm install hexo-deployer-git –save （此命令在新建的本地博客文件夹根目录执行）改了之后执行，然后再部署试试</p>
<p>修改，更换完主题 重新执行<br>//生成静态文件<br>hexo generate</p>
<p>//部署服务<br>hexo deploy</p>
<p>还可以参考这个：</p>
<p><a href="https://zhuanlan.zhihu.com/p/26625249" target="_blank" rel="external">https://zhuanlan.zhihu.com/p/26625249</a> 比较全</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;安装node.js&lt;br&gt;准备命令： yum -y install gcc make gcc-c++ openssl-devel wget&lt;br&gt;去node.js中文网下载linux 64位的安装文件 xxx.tar.xz&lt;br&gt;解压缩文件 xz -d node-v8.1.3-linux-x64.tar.xz 再解压缩 tar -xvf node-v8.1.3-linux-x64.tar&lt;br&gt;把文件直接移到 指定文件夹中 sudo mv node-v8.1.3-linux-x64 /usr/local&lt;br&gt;配置环境变量 sudo vim /etc/profile 添加如下：export PATH=$PATH:/usr/local/nodejs/bin 生效 source /etc/profile&lt;br&gt;查看是否配置成功：echo $PATH&lt;br&gt;检查node.js是否配置成功 node -v npm -v&lt;br&gt;
    
    </summary>
    
      <category term="笔记" scheme="http://sowhatxie.top/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="YAYA" scheme="http://sowhatxie.top/tags/YAYA/"/>
    
      <category term="Hexo" scheme="http://sowhatxie.top/tags/Hexo/"/>
    
  </entry>
  
</feed>
